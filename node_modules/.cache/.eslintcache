[{"/Users/yeinalee/Desktop/simplediary/src/index.js":"1","/Users/yeinalee/Desktop/simplediary/src/App.js":"2","/Users/yeinalee/Desktop/simplediary/src/DiaryEditor.js":"3","/Users/yeinalee/Desktop/simplediary/src/DiaryList.js":"4","/Users/yeinalee/Desktop/simplediary/src/DiaryItem.js":"5","/Users/yeinalee/Desktop/simplediary/src/optimizeTest.js":"6"},{"size":255,"mtime":1653026854438,"results":"7","hashOfConfig":"8"},{"size":2634,"mtime":1658551519972,"results":"9","hashOfConfig":"8"},{"size":3448,"mtime":1658204805953,"results":"10","hashOfConfig":"8"},{"size":1009,"mtime":1655798819695,"results":"11","hashOfConfig":"8"},{"size":2018,"mtime":1658205866409,"results":"12","hashOfConfig":"8"},{"size":1020,"mtime":1658204238112,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xf9evr",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/yeinalee/Desktop/simplediary/src/index.js",[],[],"/Users/yeinalee/Desktop/simplediary/src/App.js",["35"],[],"/Users/yeinalee/Desktop/simplediary/src/DiaryEditor.js",["36"],[],"import React, { useEffect, useRef, useState, } from \"react\";\n\nconst DiaryEditor = ({ onCreate }) => {\n\n    const authorInput = useRef(); //돔 요소에 접근\n    const contentInput = useRef(); //돔 요소에 접근\n\n    //useState(\"\") : 초기값!!\n    // const[state, setState] = useState();\n    // const [author, setAuthor] = useState(\"이예나\"); 를 하나로 합혀서!\n    const [state, setState] = useState({\n        author: \"이예나\", //기본값\n        content: \"\",\n        emotion: 1\n    });\n\n    //이벤트 핸들러 함수\n    const handleChangeState = (e) => {\n        setState({\n            ...state, //나머지는 그대로\n            [e.target.name]: e.target.value //ex) author : e.trarget.name(변경된 내ㅇ)\n        })\n    }\n\n    const handleSubmit = () => {\n        if (state.author.length < 1) { //입력을 강제하는 함수\n            //alert(\"작성자는 최소 1글자 이상 입력해주세요.\");\n            authorInput.current.focus(); //현재 가리키는 값을 current로 불러옴\n            return;\n        }\n        if (state.content.length < 5) {\n            //alert(\"일기 본문은 최소 5글자 이상 입력해주세요. \");\n            contentInput.current.focus();\n            return;\n        }\n\n        onCreate(state.author, state.content, state.emotion);\n        alert(\"저장 성공\");\n        setState({          //일기 작성 폼 초기화\n            author: \"이예나\",\n            content: \"\",\n            emotion: 1,\n        });\n    };\n\n    return <div className=\"DiaryEditor\">\n        <h2>오늘의 일기</h2>\n        <div>{/* 작성자 입력 받기 */}\n            {/* onChange : callback함수, 값이 바뀌었을 때(event가 발생했을 때) 수행하는 함수\n                            e(이벤트 객체)를 인자로 받음 */}\n            <input\n                ref={authorInput} //authorInput을 통해 input에 접근\n                name=\"author\"\n                value={state.author}\n                onChange   //={(e) => {\n                // setState({ // 객체의 값을 바꾸려면 객체를 만들어 전달\n                //     author: e.target.value, //author 값은 바꿈\n                //     content: state.content  //content 값은 유지\n                // })\n                //}\n                ={handleChangeState}\n            //author 값을 바꿈\n            >\n            </input>\n        </div>\n\n        <div>{/* 여러 줄 일기 입력 받기*/}\n            <textarea ref={contentInput} name=\"content\"\n                value={state.content}\n                onChange={(e) => {\n                    setState({\n                        ...state, //스프레드 연산자 : 나머지는 그대로 유지!\n                        content: e.target.value\n                    })\n                }\n                } >\n            </textarea>\n        </div>\n\n        <div>\n            오늘의 감정점수 :\n            <select name=\"emotion\" value={state.emotion} onChange={handleChangeState}>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n            </select>\n        </div>\n\n        <div> {/* 저장 버튼 */}\n            <button onClick={handleSubmit}>일기 저장하기</button>\n        </div>\n    </div >\n\n};\n\nexport default React.memo(DiaryEditor);",[],"/Users/yeinalee/Desktop/simplediary/src/DiaryList.js",[],[],[],"/Users/yeinalee/Desktop/simplediary/src/DiaryItem.js",[],[],"/Users/yeinalee/Desktop/simplediary/src/optimizeTest.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":61,"column":8,"nodeType":"39","endLine":61,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"46","fix":"47"},"Update the dependencies array to be: [data]",{"range":"48","text":"49"},[1850,1863],"[data]"]