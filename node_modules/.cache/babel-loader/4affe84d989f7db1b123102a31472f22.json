{"ast":null,"code":"var _jsxFileName = \"/Users/yeinalee/Desktop/simplediary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\nimport { useRef, useState } from \"react\";\nimport Lifecycle from './Lifecylce'; //https://jsonplaceholder.typicode.com/comments\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]); //일기 데이터\n\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n  };\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]); //일기 상태 변화 함수\n  };\n\n  const onRemove = targetId => {\n    const newDiaryList = data.filter(it => it.id !== targetId); //지울 일기를 제외한 나머지 일기 배열\n\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    //특정 일기 데이터 수정\n    setData(data.map(it => //모든 요소를 순회하면서\n    it.id === targetId ? { ...it,\n      content: newContent\n    } : it) //수정 대상이면 content 수정\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      diaryList: data,\n      onRemove: onRemove,\n      onEdit: onEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PSh4R9M9XXzghkCT8iIKMDh9kfM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DiaryEditor","DiaryList","useRef","useState","Lifecycle","App","data","setData","dataId","getData","res","fetch","then","json","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newDiaryList","filter","it","onEdit","newContent","map"],"sources":["/Users/yeinalee/Desktop/simplediary/src/App.js"],"sourcesContent":["import './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\nimport { useRef, useState } from \"react\";\nimport Lifecycle from './Lifecylce';\n\n//https://jsonplaceholder.typicode.com/comments\n\nfunction App() {\n  const [data, setData] = useState([]);   //일기 데이터\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res) => res.json());\n\n  }\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);      //일기 상태 변화 함수\n  };\n\n  const onRemove = (targetId) => {\n    const newDiaryList = data.filter((it) => it.id !== targetId); //지울 일기를 제외한 나머지 일기 배열\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => { //특정 일기 데이터 수정\n    setData(\n      data.map((it) => //모든 요소를 순회하면서\n        it.id === targetId ? { ...it, content: newContent } : it) //수정 대상이면 content 수정\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CADa,CAC2B;;EACxC,MAAMK,MAAM,GAAGN,MAAM,CAAC,CAAD,CAArB;;EAEA,MAAMO,OAAO,GAAG,YAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAL,CAAuDC,IAAvD,CAA6DF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAArE,CAAlB;EAED,CAHD;;EAKA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;IACA,MAAMC,OAAO,GAAG;MACdN,MADc;MAEdC,OAFc;MAGdC,OAHc;MAIdC,YAJc;MAKdI,EAAE,EAAEd,MAAM,CAACe;IALG,CAAhB;IAOAf,MAAM,CAACe,OAAP,IAAkB,CAAlB;IACAhB,OAAO,CAAC,CAACc,OAAD,EAAU,GAAGf,IAAb,CAAD,CAAP,CAV6C,CAUX;EACnC,CAXD;;EAaA,MAAMkB,QAAQ,GAAIC,QAAD,IAAc;IAC7B,MAAMC,YAAY,GAAGpB,IAAI,CAACqB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAArB,CAD6B,CACiC;;IAC9DlB,OAAO,CAACmB,YAAD,CAAP;EACD,CAHD;;EAKA,MAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;IAAE;IACzCvB,OAAO,CACLD,IAAI,CAACyB,GAAL,CAAUH,EAAD,IAAQ;IACfA,EAAE,CAACN,EAAH,KAAUG,QAAV,GAAqB,EAAE,GAAGG,EAAL;MAASZ,OAAO,EAAEc;IAAlB,CAArB,GAAsDF,EADxD,CADK,CAEuD;IAFvD,CAAP;EAID,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,WAAD;MAAa,QAAQ,EAAEd;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,SAAS,EAAER,IAAtB;MAA4B,QAAQ,EAAEkB,QAAtC;MAAgD,MAAM,EAAEK;IAAxD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAxCQxB,G;;KAAAA,G;AA0CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}