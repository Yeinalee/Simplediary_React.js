{"ast":null,"code":"var _jsxFileName = \"/Users/yeinalee/Desktop/simplediary/src/DiaryList.js\";\nimport DiaryItem from './DiaryItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiaryList = _ref => {\n  let {\n    diaryList,\n    onRemove,\n    onEdit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC77C\\uAE30 \\uB9AC\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [diaryList.length, \"\\uAC1C\\uC758 \\uC77C\\uAE30\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: diaryList.map(it => /*#__PURE__*/_jsxDEV(DiaryItem, { ...it,\n        onRemove: onRemove,\n        onEdit: onEdit\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this) //it 객체의 모든 데이터를 전달\n      // <div key={it.id} >\n      //     <div>작성자 : {it.author}</div>\n      //     <div>일기 : {it.content}</div>\n      //     <div>감정 : {it.emotion}</div>\n      //     <div>작성 시간 : {it.creater_date}</div>\n      // </div>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DiaryList;\nDiaryList.defaultProps = {\n  //undefined일때의 error해결 \n  diaryList: [] //일기가 하나도 없을 때는 default로 빈 배열 설정\n\n};\nexport default DiaryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryList\");","map":{"version":3,"names":["DiaryItem","DiaryList","diaryList","onRemove","onEdit","length","map","it","id","defaultProps"],"sources":["/Users/yeinalee/Desktop/simplediary/src/DiaryList.js"],"sourcesContent":["import DiaryItem from './DiaryItem';\n\nconst DiaryList = ({ diaryList, onRemove, onEdit }) => {\n    return (\n        <div className=\"DiaryList\">\n            <h2>일기 리스트</h2>\n            <h4>{diaryList.length}개의 일기가 있습니다.</h4>\n            <div>\n                {diaryList.map((it) => (\n                    <DiaryItem key={it.id} {...it} onRemove={onRemove} onEdit={onEdit} /> //it 객체의 모든 데이터를 전달\n                    // <div key={it.id} >\n                    //     <div>작성자 : {it.author}</div>\n                    //     <div>일기 : {it.content}</div>\n                    //     <div>감정 : {it.emotion}</div>\n                    //     <div>작성 시간 : {it.creater_date}</div>\n                    // </div>\n                ))}\n            </div>\n        </div >\n    );\n};\n\nDiaryList.defaultProps = { //undefined일때의 error해결 \n    diaryList: [], //일기가 하나도 없을 때는 default로 빈 배열 설정\n};\n\nexport default DiaryList;"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAAqC;EAAA,IAApC;IAAEC,SAAF;IAAaC,QAAb;IAAuBC;EAAvB,CAAoC;EACnD,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,WAAKF,SAAS,CAACG,MAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UACKH,SAAS,CAACI,GAAV,CAAeC,EAAD,iBACX,QAAC,SAAD,OAA2BA,EAA3B;QAA+B,QAAQ,EAAEJ,QAAzC;QAAmD,MAAM,EAAEC;MAA3D,GAAgBG,EAAE,CAACC,EAAnB;QAAA;QAAA;QAAA;MAAA,QADW,CAC2D;MACtE;MACA;MACA;MACA;MACA;MACA;MAPH;IADL;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAlBD;;KAAMP,S;AAoBNA,SAAS,CAACQ,YAAV,GAAyB;EAAE;EACvBP,SAAS,EAAE,EADU,CACN;;AADM,CAAzB;AAIA,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}